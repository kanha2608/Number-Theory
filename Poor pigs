class Solution {
public:
    int poorPigs(int buckets, int minutesToDie, int minutesToTest) {
        int number_pig = minutesToTest/minutesToDie;
        int Dimen = 0;
        
        while(pow(number_pig+1 ,Dimen) < buckets){
            Dimen++;
        }
        return Dimen;
    }
};



// so consider you can perform two four trials only. 

// 1  2  3  4  5
// 6  7  8  9  10
// 11 12 13 14 15
// 16 17 18 19 20
// 21 22 23 24 25

// Here suppose we have two pigs. first pig is row pig and second is column pig.

// suppose first is died in 3rd round and second is not died at all means answer is 15th bucket.

// So we need to create a 3D, 4D ... nD box. and have n pigs to graze. 
// 1 is undtest but we are sure it will be poison.

// row pig can test 4 + 1 buckets. and column can also 4 + 1
// Total will be 5*5 buckets.


